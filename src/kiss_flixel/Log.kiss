(defMacro gitVersion [&builder b]
    (let [branch
                (assertProcess "git" ["rev-parse" "--abbrev-ref" "HEAD"])
            commitNum
                (assertProcess "git" ["rev-list" "--count" "HEAD"])]
        (b.str "${branch}@${commitNum}")))

(function log [:String s]
    (#cond
        (sys
            (#when debug
                (Sys.println s))
            (let [file (sys.io.File.append "log.txt" false)]
                (file.writeString "${s}\n")
                (file.close)))
        (true
            (haxe.Log.trace s))))

(function use []
    (set Prelude.printStr log)
    (let [msg "Launching version $(gitVersion) on $(.toString (Date.now))"
            divider (* msg.length "-")]
        (log "${divider}\n${msg}\n${divider}")))